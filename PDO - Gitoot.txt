DB Connection
dbconn.php


<?php


$username  = 'author';
$password  = 'insertpassword';[a]
$result = 0;
try {
    $dbconn = new PDO('mysql:host=localhost;dbname=gitoot', $username, $password);
} catch (PDOException $e) {
    print "Error!: " . $e->getMessage() . "<br/>";
    die();
}






Full List of Blog Posts
index.php?
getposts.php?


<?php
require_once('dbconn.php');


    try {
        $stmt = $dbconn->query[b]('SELECT postID, postTitle,      
        postDescription[c],postAuthor, postDate FROM blogPosts ORDER BY 
        postID DESC');
        while($row = $stmt->fetch()){
            
            echo '<div>';
                echo '<h1><a href="viewpost.php?id='.$row['postID'].'">'.$row['postTitle'].'</a></h1>';
                echo’<p>’.$row[‘postAuthor’].’</p>’;
                echo '<p>Posted on '.date('jS M Y H:i:s', strtotime($row['postDate'])).'</p>';
                echo '<p>'.$row['postDesc'].'</p>';                
                echo '<p><a href="viewpost.php?id='.$row['postID'].'">Read More</a></p>';                
            echo '</div>';


        }


    } catch(PDOException $e) {
        echo $e->getMessage();
    }
?>
View Post
viewpost.php


<?php


require_once('dbconn.php');


$stmt = $dbconn->prepare[d]('SELECT postID, postTitle, postContent, postDate, postAuthor FROM blog_posts WHERE postID = :postID');
$stmt->execute(array(':postID' => $_GET['id']));
$row = $stmt->fetch();
if($row['postID'] == ''){
   header('Location: ./');
   exit;[e]
}
echo '<div>';
   echo '<h1>'.$row['postTitle'].'</h1>';
    echo’<p>’.$row[‘postAuthor’].’</p>’;
   echo '<p>Posted on '.date('jS M Y', strtotime($row['postDate'])).'</p>';
   echo '<p>'.$row['postContent'].'</p>';                
echo '</div>';


?>




Submit Post
addpost.php
<?php


  require_once('dbconn.php');


  $postTitle = trim($_POST["postTitle"]);
  $postDescription = trim($_POST["postDescription"]);
  $postContent = trim($_POST["postContent"]);
  $postCategory = trim($_POST["postCategory"]);


    $stmt = $dbconn->prepare("INSERT INTO blogPosts(postTitle, postDescription, postContent, postCategory)
    VALUES (:postTitle, :postDescription, :postContent, :postCategory)");
    $stmt->bindParam(':postTitle, $postTitle);
    $stmt->bindParam(':postDescription, $postDescription);
    $stmt->bindParam(':postContent, $postContent);
    $stmt->bindParam(':postCategory, $postCategory);
 
    if($stmt->execute()){
      $result =1;
    }


    echo $result;
    $dbconn = null;










































Edit Post
editpost.php


<?php


  require_once('dbconn.php');


  $postTitle = trim($_POST["postTitle"]);
  $postDescription = trim($_POST["postDescription"]);
  $postContent = trim($_POST["postContent"]);
  $postCategory = trim($_POST["postCategory"]);
  $postID = trim($_POST[“postID”]);


    $stmt = $dbconn->prepare("UPDATE blogPosts set postTitle = :postTitle, postDescription = :postDescription, postContent = :postContent, postCategory = :postCategory where id = :id”)
    $stmt->bindParam(':postTitle, $postTitle);
    $stmt->bindParam(':postDescription, $postDescription);
    $stmt->bindParam(':postContent, $postContent);
    $stmt->bindParam(':postCategory, $postCategory);
    $stmt->bindParam(':id, $postID);
 
    if($stmt->execute()){
      $result =1;
    }


    echo $result;
    $dbconn = null;






























Delete Post
deletepost.php




<?php
 require_once('dbconn.php');


$result = 0;
echo $id = intval($_POST['pid']);


if(intval($id)){
  $stmt = $dbconn->prepare("DELETE FROM blogPosts WHERE id = :id");
  $stmt->bindParam(':id', $id, PDO::PARAM_INT);
  if($stmt->execute()){
    $result = 1;
  }
}
 echo $result;
 $dbconn = null;




















[a]want to figure out a way that the password is not in plain text here - don't understand how the hashing works
[b]not sure whether to use a query or prepare statement here
[c]use postDescription as the initial piece of chat about the blog
[d]using a prepare statement as we're using $__GET
[e]error handling, if no postID then redirect user to main page